<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于Ansible脚本部署Kubernetes V1.18高可用集群</title>
    <link href="/2020/07/19/%E5%9F%BA%E4%BA%8EAnsible%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2Kubernetes%20V1.18%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/"/>
    <url>/2020/07/19/%E5%9F%BA%E4%BA%8EAnsible%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2Kubernetes%20V1.18%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
    
    <content type="html"><![CDATA[<h3 id="一、安装要求"><a href="#一、安装要求" class="headerlink" title="一、安装要求"></a>一、安装要求</h3><h4 id="1、机器要求"><a href="#1、机器要求" class="headerlink" title="1、机器要求"></a>1、机器要求</h4><p>在开始之前，部署Kubernetes集群机器需要满足以下几个条件：</p><ul><li>一台或多台机器，操作系统 CentOS7.x-86_x64</li><li>硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多</li><li>集群中所有机器之间网络互通</li><li>可以访问外网，需要拉取镜像，如果服务器不能上网，需要提前下载镜像并导入节点</li><li>禁止swap分区</li></ul><p>确保所有节点系统时间一致</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install ntpdate -y</span><span class="hljs-meta">#</span><span class="bash"> ntpdate time.windows.com</span></code></pre><h4 id="2、单Master架构图"><a href="#2、单Master架构图" class="headerlink" title="2、单Master架构图"></a>2、单Master架构图</h4><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/single-master.jpg" srcset="/img/loading.gif" alt="single-master"></p><h4 id="3、单Master服务器规划"><a href="#3、单Master服务器规划" class="headerlink" title="3、单Master服务器规划"></a>3、单Master服务器规划</h4><table><thead><tr><th align="center">节点名称</th><th align="center">IP</th></tr></thead><tbody><tr><td align="center">etcd-1</td><td align="center">10.10.10.8</td></tr><tr><td align="center">etcd-2</td><td align="center">10.10.10.9</td></tr><tr><td align="center">k8s-node02</td><td align="center">10.10.10.10</td></tr></tbody></table><h3 id="二、下载所需文件并修改配置"><a href="#二、下载所需文件并修改配置" class="headerlink" title="二、下载所需文件并修改配置"></a>二、下载所需文件并修改配置</h3><h4 id="1、下载Ansible部署文件"><a href="#1、下载Ansible部署文件" class="headerlink" title="1、下载Ansible部署文件"></a>1、下载Ansible部署文件</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> git <span class="hljs-built_in">clone</span> https://github.com/calvinGithub/ansible-install-k8s</span><span class="hljs-meta">#</span><span class="bash"> <span class="hljs-built_in">cd</span> ansible-install-k8s</span></code></pre><p>下载软件包并解压/root目录：</p><p>链接:<a href="https://pan.baidu.com/s/11-c6ZEwwKS2YsnZqlcMIyw" target="_blank" rel="noopener">https://pan.baidu.com/s/11-c6ZEwwKS2YsnZqlcMIyw</a>  密码:gsep</p><pre><code class="hljs css"># <span class="hljs-selector-tag">tar</span> <span class="hljs-selector-tag">zxf</span> <span class="hljs-selector-tag">binary_pkg</span><span class="hljs-selector-class">.tar</span><span class="hljs-selector-class">.gz</span></code></pre><h4 id="2、修改Ansible文件"><a href="#2、修改Ansible文件" class="headerlink" title="2、修改Ansible文件"></a>2、修改Ansible文件</h4><p>修改hosts文件，根据规划修改对应IP和名称。</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vi hosts</span>[master]<span class="hljs-meta">#</span><span class="bash"> 如果部署单Master，只保留一个Master节点</span><span class="hljs-meta">#</span><span class="bash"> 默认Naster节点也部署Node组件</span>10.10.10.8 node_name=k8s-master01[node]10.10.10.9 node_name=k8s-node0110.10.10.10 node_name=k8s-node02[etcd]10.10.10.8 etcd_name=etcd-110.10.10.9 etcd_name=etcd-210.10.10.10 etcd_name=etcd-3[lb]<span class="hljs-meta">#</span><span class="bash"> 如果部署单Master，该项忽略</span>192.168.31.63 lb_name=lb-master192.168.31.71 lb_name=lb-backup[k8s:children]masternode[newnode]<span class="hljs-meta">#</span><span class="bash">192.168.31.91 node_name=k8s-node3</span></code></pre><h4 id="3、修改group-vars-all-yml文件"><a href="#3、修改group-vars-all-yml文件" class="headerlink" title="3、修改group_vars/all.yml文件"></a>3、修改group_vars/all.yml文件</h4><p>修改软件包目录和证书可信任IP。</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> vim group_vars/all.yml</span><span class="hljs-meta">#</span><span class="bash"> 安装目录 </span>software_dir: '/root/binary_pkg'k8s_work_dir: '/opt/kubernetes'etcd_work_dir: '/opt/etcd'tmp_dir: '/tmp/k8s'<span class="hljs-meta">#</span><span class="bash"> 集群网络</span>service_cidr: '10.0.0.0/24'cluster_dns: '10.0.0.2'   # 与roles/addons/files/coredns.yaml中IP一致，并且是service_cidr中的IPpod_cidr: '10.244.0.0/16' # 与roles/addons/files/kube-flannel.yaml中网段一致service_nodeport_range: '30000-32767'cluster_domain: 'cluster.local'<span class="hljs-meta">#</span><span class="bash"> 高可用，如果部署单Master，该项忽略</span>vip: '192.168.31.88'nic: 'ens33' <span class="hljs-meta">#</span><span class="bash"> 自签证书可信任IP列表，为方便扩展，可添加多个预留IP</span>cert_hosts:<span class="hljs-meta">  #</span><span class="bash"> 包含所有LB、VIP、Master IP和service_cidr的第一个IP</span>  k8s:    - 10.0.0.1    - 10.10.10.8    - 10.10.10.9    - 10.10.10.10<span class="hljs-meta">  #</span><span class="bash"> 包含所有etcd节点IP</span>  etcd:    - 10.10.10.8    - 10.10.10.9    - 10.10.10.10</code></pre><h3 id="三、一键部署"><a href="#三、一键部署" class="headerlink" title="三、一键部署"></a>三、一键部署</h3><h4 id="1、centos7安装Ansible"><a href="#1、centos7安装Ansible" class="headerlink" title="1、centos7安装Ansible"></a>1、centos7安装Ansible</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> yum install -y epel-release</span><span class="hljs-meta">#</span><span class="bash"> yum install ansible -y</span></code></pre><h4 id="2、单Master版启动命令"><a href="#2、单Master版启动命令" class="headerlink" title="2、单Master版启动命令"></a>2、单Master版启动命令</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> ansible-playbook -i hosts single-master-deploy.yml -uroot -k</span></code></pre><p>命令结束后，可以看到生成了访问令牌</p><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718230920066.png" srcset="/img/loading.gif" alt="image-20200718230920066"></p><pre><code class="hljs shell">eyJhbGciOiJSUzI1NiIsImtpZCI6IjFhMTN5LXdUVFN6TVVoNmZ1dUltVngyTmxvMXNKejFTYkZkbldaNWhWdXcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tcXRyNmwiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYWY5YWIyNmMtN2MwZC00MTZkLWJhYmMtZTMwMWY5MDBmMjU0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.4gRDjg8It_8h0LInLHXrchsUCcdH0UerDDkCdd2y_UnKwc6wAhReDQYc2NaYVda2704Hu7-n7_fXFATQ_bf6noBjoQNsCEJ1NwBl0DO4h3l_i80YIVT9R2yl1nEq6CY5Da7rR01pp6-Htih1mpEb-O_xsP_L6FrsVjKBubY63gK4O9LQLQSnoEE-24ggg2VgyS5rVHTTDlEpq3J0XeqXiBbaZJa8o65Yg08sKzeHAffgY2538p-9ZV5-tJAsL4wbud8TjSXCzWkxsVsmH7Au0ZwRrth1tVrVEqoPGOusDVu6sFxSO53lpwsvlcg1TpKIxNMEbDTQ6GSJbPA_dyeW9Q</code></pre><h3 id="四、测试部署情况"><a href="#四、测试部署情况" class="headerlink" title="四、测试部署情况"></a>四、测试部署情况</h3><h4 id="1、访问Dashboard"><a href="#1、访问Dashboard" class="headerlink" title="1、访问Dashboard"></a>1、访问Dashboard</h4><p>随便访问任何一个节点，<a href="https://Node:30001" target="_blank" rel="noopener">https://Node:30001</a></p><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718231233862.png" srcset="/img/loading.gif" alt="image-20200718231233862"></p><p>进入页面后，点击左侧导航栏Nodes，可以看到目前加入k8s的服务器节点。</p><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718231355987.png" srcset="/img/loading.gif" alt="image-20200718231355987"></p><h4 id="2、使用kubectl命令查看容器"><a href="#2、使用kubectl命令查看容器" class="headerlink" title="2、使用kubectl命令查看容器"></a>2、使用kubectl命令查看容器</h4><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 1.查看nodes</span>[root@k8s-master01 ansible-install-k8s]# kubectl get nodeNAME           STATUS   ROLES    AGE   VERSIONk8s-master01   Ready    &lt;none&gt;   15m   v1.18.6k8s-node01     Ready    &lt;none&gt;   15m   v1.18.6k8s-node02     Ready    &lt;none&gt;   15m   v1.18.6<span class="hljs-meta">#</span><span class="bash"> 2.创建应用nginx</span>[root@k8s-master01 ansible-install-k8s]# kubectl create deployment web --image=nginxdeployment.apps/web created<span class="hljs-meta">#</span><span class="bash"> 3.启动应用nginx</span>[root@k8s-master01 ansible-install-k8s]# kubectl expose deployment web --port=80 --target-port=80 --name=web --type=NodePortservice/web exposed<span class="hljs-meta">#</span><span class="bash"> 4.查看所有启动的应用(30794即为容器80端口对应的宿主机映射端口)</span>[root@k8s-master01 ansible-install-k8s]# kubectl get svcNAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)        AGEkubernetes   ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP        32mweb          NodePort    10.0.0.95    &lt;none&gt;        80:30794/TCP   38s</code></pre><h4 id="3、Dashboard查看运行容器"><a href="#3、Dashboard查看运行容器" class="headerlink" title="3、Dashboard查看运行容器"></a>3、Dashboard查看运行容器</h4><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718232547965.png" srcset="/img/loading.gif" alt="image-20200718232547965"></p><p>可以看到测试用的web容器已经启动，查看容器日志</p><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718232658162.png" srcset="/img/loading.gif" alt="image-20200718232658162"></p><p>浏览器访问：<a href="http://10.10.10.9:30794/" target="_blank" rel="noopener">http://10.10.10.9:30794/</a></p><p><img src="https://ecblog.oss-cn-hangzhou.aliyuncs.com/image-20200718232858065.png" srcset="/img/loading.gif" alt="image-20200718232858065"></p><p>至此，单Master的k8s集群及部署docker应用已经成功。</p>]]></content>
    
    
    
    <tags>
      
      <tag>k8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
